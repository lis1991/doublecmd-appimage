name: üß∞ Build Double Commander AppImage with AppImageBuilder

on:
  schedule:
    - cron: '0 4 * * 0'  # –ö–∞–∂–¥–æ–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –≤ 04:00 UTC
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v4

      - name: üì¶ Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget curl desktop-file-utils libglib2.0-0

      - name: üì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å AppImageBuilder
        run: |
          sudo apt install -y python3-pip
          pip3 install appimage-builder

      - name: üî® Build Double Commander AppImage
        run: |
          appimage-builder --recipe AppImageBuilder.yml --skip-test

      - name: üì§ Upload AppImage Artifact
        uses: actions/upload-artifact@v4
        with:
          name: DoubleCommander-AppImage
          path: Double_Commander-*-x86_64.AppImage

      - name: üè∑Ô∏è Extract Version (Optional)
        id: get_version
        run: |
          FILE=$(ls Double_Commander-*-x86_64.AppImage 2>/dev/null | head -1)
          if [ -n "$FILE" ]; then
            VERSION=$(echo "$FILE" | grep -o '[0-9]\+\.[0-9]\+\.[0-9]\+' | head -1)
            echo "version=$VERSION" >> $GITHUB_OUTPUT
          else
            echo "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–µ—Ä—Å–∏—é"
            exit 1
          fi

      - name: üöÄ Create GitHub Release (Optional)
        if: success() && github.event_name == 'schedule'
        uses: softprops/action-gh-release@v2
        with:
          files: Double_Commander-*-x86_64.AppImage
          tag_name: v${{ steps.get_version.outputs.version }}
          body: "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–±–æ—Ä–∫–∞ Double Commander AppImage —á–µ—Ä–µ–∑ AppImageBuilder"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
